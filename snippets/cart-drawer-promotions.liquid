{% comment %}
  Render Cart Drawer Promotions
{% endcomment %}

{% assign free_shipping = 5000 %}
{% assign free_product = 10000 %}

<div class="cart-drawer-promotions" {{ block.shopify_attributes }}>
  <ul class="cart-drawer-promotions__list">
    <li
      class="cart-drawer-promotions__item {% if cart.total_price >= free_shipping%}cart-drawer-promotions__item--success{% endif %}"
      style="--pourcentage: {{ cart.total_price | times: 100 | divided_by: free_shipping }}%;"
    >
      <p class="cart-drawer-promotions__label">
        {% if cart.total_price < free_shipping %}
          Plus que {{ free_shipping | minus: cart.total_price | money }} pour bÃ©nÃ©ficier de la livraison gratuite.
        {% else %}
          FÃ©licitations, vous bÃ©nÃ©ficiez de la livraison gratuite !
        {% endif %}
      </p>
    </li>

    <li
      class="cart-drawer-promotions__item {% if cart.total_price >= free_product%}cart-drawer-promotions__item--success{% endif %}"
      style="--pourcentage: {{ cart.total_price | times: 100 | divided_by: free_product }}%;"
    >
      <p class="cart-drawer-promotions__label ">
        {% if cart.total_price < free_product %}
          Plus que {{ free_product | minus: cart.total_price | money }} pour bÃ©nÃ©ficier d'un produit gratuit.
        {% else %}
          FÃ©licitations, vous bÃ©nÃ©ficiez d'un produit gratuit !
        {% endif %}
      </p>
    </li>
  </ul>
</div>

<style>
  .cart-drawer-promotions {
    padding: 1.5rem;
    background-color: #f9f9f9;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .cart-drawer-promotions__list {
    list-style-type: none;
    padding: 0;
    margin: 0;
    position: relative;
  }

  .cart-drawer-promotions__label {
    font-weight: bold;
    margin: 0 0 0.5rem 0;
    font-size: 1rem;
  }

  .cart-drawer-promotions__item {
    --pourcentage: 0%;
    --clr: #000;

    margin-bottom: 1.5rem;
  }

  .cart-drawer-promotions__item--success {
    --clr: #2ecc71;
  }

  .cart-drawer-promotions__item--success .cart-drawer-promotions__label::before {
    content: 'ðŸŽ‰';
    margin-right: 0.5rem;
  }

  .cart-drawer-promotions__item::after {
    content: '';

    display: block;
    height: 0.3rem;
    width: 100%;

    background-image: linear-gradient(90deg, var(--clr) var(--pourcentage), rgba(0, 0, 0, 0.2) var(--pourcentage));
  }
</style>

<script>
  // Check and update product in cart when the page is loaded or the cart is updated
  document.addEventListener('DOMContentLoaded', checkAndUpdateProduct);
  document.addEventListener('cart_update', checkAndUpdateProduct);

  /**
   * checkAndUpdateProduct()
   * Checks if the cart total price is greater than or equal to free_product and the product is not in the cart
   * Adds the product to the cart if the cart total price is greater than or equal to free_product and the product is not in the cart
   * Removes the product from the cart if the cart total price is less than free_product and the product is in the cart
   */
  async function checkAndUpdateProduct() {
    const productId = 52831218630979;

    try {
      const cart = await fetch('/cart.json').then((res) => res.json());
      const total = cart.total_price / 100;
      const product = cart.items.find((item) => item.id === productId);

      const url = total >= 100 && !product ? '/cart/add.js' : total < 100 && product ? '/cart/update.js' : null;
      const body = total >= 100 && !product ? { id: productId, quantity: 1 } : { updates: { [productId]: 0 } };

      if (url) {
        await fetch(url, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(body),
        });

        total >= 100 && !product && alert('Produit gratuit ajoutÃ© au panier !');
      }

      updateCartDrawer();
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  }

  /**
   * updateCartDrawer()
   * Gets the cart drawer content after the cart is updated and updates the current cart drawer
   */
  async function updateCartDrawer() {
    try {
      const response = await fetch('/?section_id=cart-drawer');
      const html = document.createElement('div');
      html.innerHTML = await response.text();

      document.querySelector('.cart-drawer').innerHTML = html.querySelector('.cart-drawer').innerHTML;
    } catch (error) {
      console.error('Error updating cart drawer:', error);
    }
  }
</script>
